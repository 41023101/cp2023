<h1>About</h1>
<p>41023101 王怡婷</p>
<p>倉儲:<a href="https://github.com/41023101/cp2023">https://github.com/41023101/cp2023</a> </p>
<p>網站:<a href="https://41023101.github.io/cp2023/content/index.html">https://41023101.github.io/cp2023/content/index.html</a> </p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>
<h1>weekly progress</h1>
<p><span style="background-color: #ffff00;">w1</span>:</p>
<p><strong>建立帳號與網站</strong></p>
<p>利用已經帶有 Brython 執行環境的倉儲, 在設定學員 Github Classroom 首次作業時, 即經由 template 置入, 因此學員只要:</p>
<p>利用學校 email 帳號, 建立 Github 帳號, 以英文姓名縮寫加上一組數字, 選擇最短帳號名稱 例如: jfk40723199, jfk 為其自選的姓名縮寫, 而隨後則加上各自的學號.</p>
<p>擁有 Github 帳號後, 即可透過 Github Classroom assignment 連結取得作業倉儲, 自行在倉儲中設定 Github Pages 後, 即可啟用作業網站 (以下<span> </span><span>所謂<span style="background-color: #99ccff;">網站均指靜態網站</span><span> </span></span>, 而用來編輯網站內容的<span style="background-color: #99ccff;">動態網站, 則統稱為網際內容編輯器</span>, 使用動態網站的目的在編輯靜態網站的內容). 網站內容經過編輯之後, 必須建立新的網站內容 (使用 generate_pages), 然後將新的網站內容更新到對應的 Github 倉儲中 (稱為改版, 其過程經歷 git add, git commit 與 git push 等階段).</p>
<p>git 為分散式版次管理系統工具.</p>
<p>git add</p>
<p>git commit</p>
<p>git push</p>
<p><span style="background-color: #ffff00;">w2</span>:</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EflMzDYwTjdIm2KJB7SCYkwB1_6UTQ4mzUdDx-bwN22E8A?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=ZN0EPP">說明安裝 Apps, 如何設定網路, 查驗是否正確連網</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/Ef4xqA-zGsxFlnrsIq1WhRQBt7HalMhjXLb5hzLRmprYOQ?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=a7Oaxo">說明如何利用近端可攜系統執行 C 程式, 如何利用 ChatGPT 進行對話</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EZ97ogpobtpCv2BxYJfDGjEBgadG6gPZJYN5TbB7clrMtA?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=PcbKn5">說明如何利用 Replit 協助編輯網頁內容</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EW-FcfDAaMZPjdA8nFjgCHEBpp8yPr7wSoi9RsxmyLbZpA?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=E1T3vG">說明如何 connect Replit to Github, 如何建立個人網站並利用 Replit 啟動編輯網站</a></p>
<p><span style="background-color: #ffff00;">w3</span>:</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EbXrVO6Jeb5Gnn47Dvpv7pYBftMz4z9evscZ-Spxxmk7mw?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=RiZ5wB">有關電腦輔助設計室網路設定說明</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/Eb1u9lGQSotOpxiJTQeFVwEBq-FxJEDTnTkuUL0jlGdnFQ?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=zcA6Qt">處理 .replit 與 replit.nix 中的舊 Python 設定問題</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EUVPlEOxYxdCkQyT9rX-B64BK_SNHRJaz52HloupubxlMw?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=W03gHn">說明如何為 site-個人github帳號 倉儲設定 Github Pages</a></p>
<p>採用 Github Classroom 建立作業倉儲的問題:</p>
<p>2023/09/26 在 1a w3 課程進行到建立各學員 site 作業時發現, 將 Replit 導入 Github 倉儲的流程中, 所產生的系統間權限設定, 必須由 Github Classroom 管理帳號 (以 cp2023 為例, 附屬在 mdecp2023 帳號下), 針對各用戶所提出的個別 Replit 權限 requests (以 site-scrum-1 倉儲為例, 只能透過 Replit 提出控管 mdecp2023/site-scrum-1 倉儲的權限)<span> </span><span>逐一進行設定</span>.</p>
<p><img alt="" class="add_border" height="310" src="https://mde.tw/cpnote/images/mdecp2023_replit_requests.png" width="400"/></p>
<p>(上圖顯示共有三名用戶針對 mdecp2023 帳號下的 Github Classroom 倉儲提出 Replit 連線要求, 其中只有最上方用戶的 request 取得 mdecp2023/site-scrum-1 倉儲的維護權限, 其餘兩則 requests 則仍處於待審核階段. 意即若要讓各用戶整合 Replit,<span> </span><span>每一個 Github Classroom 作業, 管理者都必須手動處理超過兩百則的 requests</span>)</p>
<p>為去除管理者的手動設定負擔, 決定 2023 cp 與 cad 等課程將放棄使用 Github Classroom. 改為由各學員自行針對課程建立用來評分的課程倉儲與網站 (cp 課程建立 cp2023 倉儲, cad 課程則建立 cad2023 倉儲), 直接附屬在學員的 Github 帳號下, 後續的 submodule 設定與倉儲協同權限則統一由各學員自行負責</p>
<p><span style="background-color: #ffff00;">w4</span>:</p>
<p><span>各學員自行建立線上考試帳號</span></p>
<p><span>依據<span> </span><a href="https://qry.nfu.edu.tw/teacher.php?selyr=1121&amp;teacher=%E5%9A%B4%E5%AE%B6%E9%8A%98">112 學年度第一學期教師授課表</a>中的學員修課名單, 利用 Teams 中的 Excel 取學員 Github 帳號.</span></p>
<p><span>各學員自行建立 Github 評分倉儲 cp2023, 並設定 Github Pages</span></p>
<p>登入 Github 後, 以 <a href="https://github.com/mdecycu/cmsite">https://github.com/mdecycu/cmsite</a> 作為 Template 建立 cp2023 倉儲</p>
<p><span>在 Replit IDE 上啟動 cp2023 內容編輯網站, 並將改版內容推送至 Github</span></p>
<p>在同時登入 Github 與 Replit 的情況下, 將 Replit 帳號 connect 至 Github 帳號</p>
<p>利用 import 將 cp2023 倉儲導入 Replit</p>
<p>設定 .replit 為 python3 main.py</p>
<p>根據 cp2023 倉儲中的 README.md 在 Shell 區執行 git submodule 與 pip install</p>
<p>以 Run 執行 main.py 啟動倉儲內容編輯網頁</p>
<p>利用<a href="https://mde.tw/cpnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py">密碼產生程式</a>將所選定的管理者密碼字串存入 Tool - Secrets 頁面中的 config 變數 (若無 config 環境變數設定, 動態網站登入管理者密碼將交由倉儲中的 config/config 字串進行驗證)</p>
<p>重新啟倉儲內容編輯網頁後, 以新管理者密碼登入後改版並 Convert 為靜態內容後, 在 Git 頁面中將改版內容推至 Github</p>
<p><span style="background-color: #ffff00;"><span style="background-color: #ffff00;">w5<span style="background-color: #ffffff;">:</span></span></span></p>
<p><span>在 Replit cp2023 專案中設定 C 程式與 Gnuplot 執行環境, 完成<a href="https://mde.tw/cpnote/content/%E4%B8%8A%E8%AA%B2%E5%85%A7%E5%AE%B9.html">上課內容中的練習</a></span></p>
<p>replit.nix<span> </span><a href="https://mde.tw/cpnote/content/w2-w4.html">納入 gnuplot 套件</a></p>
<p><span><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EZYZvhkOEnxFrCnVI_VuvpYBIqzEWtPCWnyvqhrRqC_TgQ?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=1axakq">w5 1b cp2023 與 Replit C 程式執行環境說明影片.mp4</a></span></p>
<p><span>設定過程使用的參考網站: <a href="https://scrum-1.github.io/cp2023/content/w5.html">https://scrum-1.github.io/cp2023/content/w5.html</a> </span></p>
<p><span>設定過程使用的 Repl:<span> </span><a href="https://replit.com/@scrum1/cp2023">https://replit.com/@scrum1/cp2023</a> (包含<span> </span><a href="https://replit.com/@scrum1/cp2023#replit.nix">replit.nix</a><span> </span>設定檔案)</span></p>
<p><span style="background-color: #99ccff;">蒐集牛頓第二運動定律、mass-spring-damper 系統、Euler's Method 數值分析相關資料</span></p>
<p>將<span> </span><a href="https://mde.tw/cpnote/content/MSD.html">euler_gnuplot_msd_ex1.c</a><span> 放入 downloads 目錄中, 以 cc euler_gnuplot_msd_ex1.c -o euler_gnuplot_msd_ex1 產生 euler_gnuplot_msd_ex1 可執行檔案後, 以 ./euler_gnuplot_msd_ex1 執行</span></p>
<p><span>最後可以在 images 目錄中得到<span> </span><a href="https://mde.tw/cpnote/images/motion_plot.png">motion_plot.png</a><span> </span>模擬結果</span></p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EWd1cR2zOStOjVSduSw6pQMBv1fB6tWu-P9qfVH2YxbDPw?e=uOZW7N">jsliu_c_programming.pdf</a><span> </span>(需要下載密碼)</p>
<p><a href="https://link.springer.com/content/pdf/10.1007/978-1-4842-5064-8_1.pdf?pdf=inline%20link">Introduction to C</a> (經由校園網路或 VPN 下載)</p>
<p><span style="background-color: #99ccff;">改由學員自行利用 <a href="https://github.com/mdecycu/cmsite" style="background-color: #99ccff;">https://github.com/mdecycu/cmsite</a> 倉儲作為 template, 建立名稱為 cp2023 的評分倉儲</span></p>
<p><span style="background-color: #99ccff;"><span style="background-color: #ffffff;"><span style="background-color: #ffff00;">w6</span>:</span><br/></span></p>
<p><span style="background-color: #99ccff;"><span style="background-color: #ffffff;"><span><span style="background-color: #99ccff;">評分網站與倉儲</span>:</span></span></span></p>
<p><a href="https://mde.tw/cpnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9215c7c160119721ded887018cda8f4e/raw/593a8e462e0d8e7996f0bca3dd922adfdd4962e0/generate_cp2023_1a_site_repo.py">cp2023 1a 學員網站與倉儲連結</a></p>
<p>建立線上考試題目</p>
<p>各學員評分倉儲與網站的內容維護</p>
<p>SMap</p>
<p>EditA</p>
<p>Edit</p>
<p>Config</p>
<p>Search</p>
<p>IUpload</p>
<p>IList</p>
<p>FUpload</p>
<p>FList</p>
<p>Logout</p>
<p>Convert</p>
<p>C 程式練習一:</p>
<p><span>請從 </span><a href="https://www.w3resource.com/c-programming-exercises/">https://www.w3resource.com/c-programming-exercises/</a><span><span> </span>網頁中自選 10 個練習範例, 分別在 Replit, Windows 與 Linux (or macOS) 中執行後, 取下執行畫面放入個人的 Github Pages 網頁 (即帳號.github.io 網站), 以<span> </span><span style="background-color: #99ccff;">ANSIC</span><span> </span>作為頁面標題並詳細說明每一行的程式語法.</span></p>
<p><span>C 程式練習二:</span></p>
<p>請從 <a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EWd1cR2zOStOjVSduSw6pQMBv1fB6tWu-P9qfVH2YxbDPw?e=uOZW7N">jsliu_c_programming.pdf</a><span> </span>(需要下載密碼)與 <a href="https://link.springer.com/content/pdf/10.1007/978-1-4842-5064-8_1.pdf?pdf=inline%20link">Introduction to C</a> (經由校園網路或 VPN 下載)電子書中各擷取 10 個 C 程式範例, 分別:</p>
<p>1. 在可攜程式環境中以 SciTE + Tiny C Compiler 編譯系統, 使用 Tools - Go 類編譯方式執行.</p>
<p>2. 在可攜程式環境中以 SciTE + Tiny C Compiler 編譯系統, 使用 Tools - Compile 編譯連結後取得 a.out, 然後在命令列中以 a.out 執行.</p>
<p>3. 在 Replit 全球資訊網 IDE 環境中的 Shell 頁面, 以 cc ex1.c 產生可執行檔案 a.out, 並以 ./a.out 執行, 或者以 cc ex1.c -o ex1 指定編譯連結後的可執行檔案名稱為 ex1 後, 以 ./ex1 執行.</p>
<p>最後將所選擇的 C 程式範例執行過程與相關說明內容, 整理在<span>個人 github 帳號下的 cp2023 倉儲網頁</span>中的<span> </span><span style="background-color: #99ccff;">c_ex</span><span> </span>頁面中</p>
<p><span style="background-color: #ffff00;">w7</span>:</p>
<p>進行九人一排分組, 期中成績預計送出個人期望成績.</p>
<h1>課程評分</h1>
<p><span style="background-color: #ffff00;">課程評分</span>:</p>
<p>線上測驗、期中網站與簡報、期末網站與簡報.</p>
<p><span style="background-color: #ffff00;">線上測驗</span>:</p>
<p>建立帳號後 (<span>請將密碼寫入手機的備忘錄</span>), 每週不定時進行.</p>
<p><span style="background-color: #ffff00;">期中網站評分與簡報</span>:</p>
<p>期中考前兩週開始進行.</p>
<p><span style="background-color: #ffff00;">期末網站評分與簡報</span>:</p>
<p>期末考前兩週開始進行.</p>
<p><span style="background-color: #ffff00;">期中成績計算</span>:</p>
<p>期中考與之前各週線上測驗成績平均</p>
<p><span style="background-color: #ffff00;">學期成績計算</span>:</p>
<p><span style="text-decoration: underline;">(期中成績與之後各週線上測驗成績平均)*60%+(期中網站與簡報成績)*20%+(期末網站與簡報成績)*20%</span></p>
<h1>HW1</h1>
<p>C 程式練習一:</p>
<p><span>請從 </span><a href="https://www.w3resource.com/c-programming-exercises/">https://www.w3resource.com/c-programming-exercises/</a><span><span> </span>網頁中自選 10 個練習範例, 分別在 Replit, Windows 與 Linux (or macOS) 中執行後, 取下執行畫面放入個人的 Github Pages 網頁 (即帳號.github.io 網站), 以<span> </span><span>ANSIC</span><span> </span>作為頁面標題並詳細說明每一行的程式語法.</span></p>
<h2>練習一</h2>
<p><span>1.</span>將攝氏度轉換為華氏度</p>
<p><img alt="" height="300" src="/images/溫度.jpg" width="500"/></p>
<p><a href="/downloads/溫度轉換.txt">溫度轉換.txt</a></p>
<p><span>2.<span>計算球體體積</span></span></p>
<p><img alt="" height="300" src="/images/球體.jpg" width="500"/></p>
<p><a href="/downloads/球體體積.txt">球體體積.txt</a></p>
<p><span>3.<span>寫一個 C 程序，使用矩形的高度和寬度作為輸入來列印矩形的周長</span></span></p>
<p><img alt="" height="300" src="/images/周長.jpg" width="500"/></p>
<p><a href="/downloads/周長.txt">周長.txt</a></p>
<p><span>4.<span>將公里每小時轉換為英哩每小時</span></span></p>
<p><img alt="" height="300" src="/images/(公里小時)轉(英哩小時).jpg" width="500"/></p>
<p><a href="/downloads/公里轉英哩.txt">公里轉英哩.txt</a></p>
<p>5.<span>以小時和分鐘為輸入，併計算總分鐘數</span></p>
<p><img alt="" height="300" src="/images/總分鐘數.jpg" width="500"/></p>
<p><a href="/downloads/總分鐘數.txt">總分鐘數.txt</a></p>
<p><span>6.<span>計算一行輸入的三個數字的和，並用逗號分隔</span></span></p>
<p><img alt="" height="300" src="/images/三個數字和.jpg" width="500"/></p>
<p><a href="/downloads/三個數字和.txt">三個數字和.txt</a></p>
<p><span>7.<span>如果給定兩個角，請寫一個 C 程式來求三角形的第三個角</span></span></p>
<p><img alt="" height="300" src="/images/三角形.jpg" width="500"/></p>
<p><a href="/downloads/三角形.txt">三角形.txt</a></p>
<p><span>8.<span>用 C 語言寫一個程式來列印目前日期和時間</span></span></p>
<p><img alt="" height="300" src="/images/列印現在日期.jpg" width="500"/></p>
<p><a href="/downloads/列印現在日期.txt">列印現在日期.txt</a></p>
<p><span>9.<span>用 C 語言寫一個程式來計算自月初以來經過的秒數</span></span></p>
<p><img alt="" height="300" src="/images/月初秒數.jpg" width="500"/></p>
<p><a href="/downloads/月初秒數.txt">月初秒數.txt</a></p>
<p><span>10.<span>用 C 寫一個程序，將 tm 物件轉換為自訂文字表示形式</span></span></p>
<p><img alt="" height="350" src="/images/tm物件.jpg" width="600"/></p>
<p><a href="/downloads/tm物件.txt">tm物件.txt</a></p>
<h1>w5</h1>
<h1>w6</h1>
<div>
<div class="syntaxhighlighter cpp" id="highlighter_398314">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr style="height: 1694.48px;">
<td class="code" style="height: 1694.48px;">
<div class="container">
<div class="line number1 index0 alt2"><code class="cpp comments">// https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China</code></div>
<div class="line number2 index1 alt1"><code class="cpp comments">// 內政部國旗參考資料: https://www.moi.gov.tw/cp.aspx?n=10621</code></div>
<div class="line number3 index2 alt2"><code class="cpp comments">// cc roc_flag_in_gd.c -lgd -lm to link with gd and math library</code></div>
<div class="line number4 index3 alt1"><code class="cpp comments">// https://www.rapidtables.com/web/color/RGB_Color.html</code></div>
<div class="line number5 index4 alt2"><code class="cpp comments">// 幾何形狀著色與繪圖練習</code></div>
<div class="line number6 index5 alt1"><code class="cpp comments">// 以下 gd 繪圖程式嘗試畫出 ROC 國旗, 請根據下列程式內容完成後續的國旗繪圖</code></div>
<div class="line number7 index6 alt2"><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div>
<div class="line number8 index7 alt1"><code class="cpp preprocessor">#include &lt;gd.h&gt;</code></div>
<div class="line number9 index8 alt2"><code class="cpp preprocessor">#include &lt;math.h&gt;</code></div>
<div class="line number10 index9 alt1"> </div>
<div class="line number11 index10 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">draw_roc_flag(gdImagePtr img);</code></div>
<div class="line number12 index11 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">draw_white_sun(gdImagePtr img, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">x, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">y, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">size, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">color);</code></div>
<div class="line number13 index12 alt2"> </div>
<div class="line number14 index13 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">main() {</code></div>
<div class="line number15 index14 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// width 3: height 2</code></div>
<div class="line number16 index15 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">width = 1200;</code></div>
<div class="line number17 index16 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// 國旗長寬比為 3:2</code></div>
<div class="line number18 index17 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">height = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)(width*2.0 / 3.0);</code></div>
<div class="line number19 index18 alt2"> </div>
<div class="line number20 index19 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePtr img = gdImageCreateTrueColor(width, height);</code></div>
<div class="line number21 index20 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageAlphaBlending(img, 0);</code></div>
<div class="line number22 index21 alt1"> </div>
<div class="line number23 index22 alt2"><code class="cpp spaces">    </code><code class="cpp plain">draw_roc_flag(img);</code></div>
<div class="line number24 index23 alt1"> </div>
<div class="line number25 index24 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">FILE</code> <code class="cpp plain">*outputFile = </code><code class="cpp functions bold">fopen</code><code class="cpp plain">(</code><code class="cpp string">"./../images/roc_flag_in_gd.png"</code><code class="cpp plain">, </code><code class="cpp string">"wb"</code><code class="cpp plain">);</code></div>
<div class="line number26 index25 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">if</code> <code class="cpp plain">(outputFile == NULL) {</code></div>
<div class="line number27 index26 alt2"><code class="cpp spaces">        </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(stderr, </code><code class="cpp string">"Error opening the output file.\n"</code><code class="cpp plain">);</code></div>
<div class="line number28 index27 alt1"><code class="cpp spaces">        </code><code class="cpp keyword bold">return</code> <code class="cpp plain">1;</code></div>
<div class="line number29 index28 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number30 index29 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePngEx(img, outputFile, 9);</code></div>
<div class="line number31 index30 alt2"><code class="cpp spaces">    </code><code class="cpp functions bold">fclose</code><code class="cpp plain">(outputFile);</code></div>
<div class="line number32 index31 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageDestroy(img);</code></div>
<div class="line number33 index32 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div>
<div class="line number34 index33 alt1"><code class="cpp plain">}</code></div>
<div class="line number35 index34 alt2"> </div>
<div class="line number36 index35 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">draw_roc_flag(gdImagePtr img) {</code></div>
<div class="line number37 index36 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">width = gdImageSX(img);</code></div>
<div class="line number38 index37 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">height = gdImageSY(img);</code></div>
<div class="line number39 index38 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">red, white, blue;</code></div>
<div class="line number40 index39 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 白日位於青天面積正中央, 因此中心點座標為長寬各 1/4 處</code></div>
<div class="line number41 index40 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">center_x = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)(width/4);</code></div>
<div class="line number42 index41 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">center_y = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)(height/4);</code></div>
<div class="line number43 index42 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// gdImageFilledEllipse 需以長寬方向的 diameter 作圖</code></div>
<div class="line number44 index43 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 由於中央白日圓形的半徑為青天寬度的 1/8</code></div>
<div class="line number45 index44 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// 因此中央白日圓形的直徑為青天寬度的 1/4, 也就是國旗寬度的 1/8</code></div>
<div class="line number46 index45 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 而且白日十二道光芒的外圍圓形其半徑也是國旗寬度的1/8</code></div>
<div class="line number47 index46 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">sun_radius = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)(width/8);</code></div>
<div class="line number48 index47 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 中央白日圓形的直徑等於十二道光芒外圍圓形的半徑</code></div>
<div class="line number49 index48 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">white_circle_dia = sun_radius;</code></div>
<div class="line number50 index49 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 中央藍色圓形半徑為中央白日的 1又 2/15</code></div>
<div class="line number51 index50 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">blue_circle_dia = white_circle_dia +  white_circle_dia*2/15;</code></div>
<div class="line number52 index51 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 根據 https://www.moi.gov.tw/cp.aspx?n=10621 訂定國旗三種顏色值</code></div>
<div class="line number53 index52 alt2"><code class="cpp spaces">    </code><code class="cpp plain">red = gdImageColorAllocate(img, 255, 0, 0); </code><code class="cpp comments">// 紅色</code></div>
<div class="line number54 index53 alt1"><code class="cpp spaces">    </code><code class="cpp plain">white = gdImageColorAllocate(img, 255, 255, 255); </code><code class="cpp comments">// 白色</code></div>
<div class="line number55 index54 alt2"><code class="cpp spaces">    </code><code class="cpp plain">blue = gdImageColorAllocate(img, 0, 0, 149); </code><code class="cpp comments">// 藍色</code></div>
<div class="line number56 index55 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 根據畫布大小塗上紅色長方形區域</code></div>
<div class="line number57 index56 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(img, 0, 0, width, height, red);</code></div>
<div class="line number58 index57 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 青天面積為整面國旗的 1/4, 也是採用長方形塗色</code></div>
<div class="line number59 index58 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(img, 0, 0, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)(width/2.0), (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)(height/2.0), blue);</code></div>
<div class="line number60 index59 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 先設法以填色畫出六個白色堆疊菱形</code></div>
<div class="line number61 index60 alt2"><code class="cpp spaces">    </code><code class="cpp plain">draw_white_sun(img, center_x, center_y, sun_radius, white);</code></div>
<div class="line number62 index61 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 利用一個藍色大圓與白色小圓畫出藍色環狀</code></div>
<div class="line number63 index62 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledEllipse(img, center_x, center_y, blue_circle_dia, blue_circle_dia, blue);</code></div>
<div class="line number64 index63 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledEllipse(img, center_x, center_y, white_circle_dia, white_circle_dia, white);</code></div>
<div class="line number65 index64 alt2"> </div>
<div class="line number66 index65 alt1"><code class="cpp plain">}</code></div>
<div class="line number67 index66 alt2"> </div>
<div class="line number68 index67 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">draw_white_sun(gdImagePtr img, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">center_x, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">center_y, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">sun_radius, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">color) {</code></div>
<div class="line number69 index68 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// M_PI 大小定義於 math.h 標頭檔中, 因為三角函數中採用徑度為角度單位</code></div>
<div class="line number70 index69 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 因此定義將角度轉為徑度的轉換變數為 deg, 角度值乘上 deg 就可轉為徑度</code></div>
<div class="line number71 index70 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">float</code> <code class="cpp plain">deg = M_PI/180;</code></div>
<div class="line number72 index71 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 根據十二道光芒的每一尖角的角度為 15 度, 求出其對應直角三角形的另一角度為 75 度</code></div>
<div class="line number73 index72 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// 求出十二道光芒中任一菱形的 small radius, 也就是菱形的另一個對應小圓的半徑大小</code></div>
<div class="line number74 index73 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">float</code> <code class="cpp plain">sr = sun_radius/</code><code class="cpp functions bold">tan</code><code class="cpp plain">(75*deg);</code></div>
<div class="line number75 index74 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">ax, ay, bx, by, dx, dy, ex, ey;</code></div>
<div class="line number76 index75 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdPoint points[4];</code></div>
<div class="line number77 index76 alt2"><code class="cpp spaces">    </code><code class="cpp comments">/* 在塗上十二道光芒中的單一菱形區域之前, 先以座標點畫線測試是否正確</code></div>
<div class="line number78 index77 alt1"><code class="cpp spaces">    </code><code class="cpp comments">ax = center_x;</code></div>
<div class="line number79 index78 alt2"><code class="cpp spaces">    </code><code class="cpp comments">ay = center_y - sun_radius;</code></div>
<div class="line number80 index79 alt1"><code class="cpp spaces">    </code><code class="cpp comments">bx = center_x - sun_radius*tan(15*deg);</code></div>
<div class="line number81 index80 alt2"><code class="cpp spaces">    </code><code class="cpp comments">by = center_y;</code></div>
<div class="line number82 index81 alt1"><code class="cpp spaces">    </code><code class="cpp comments">ex = center_x;</code></div>
<div class="line number83 index82 alt2"><code class="cpp spaces">    </code><code class="cpp comments">ey = center_y + sun_radius;</code></div>
<div class="line number84 index83 alt1"><code class="cpp spaces">    </code><code class="cpp comments">dx = center_x + sun_radius*tan(15*deg);</code></div>
<div class="line number85 index84 alt2"><code class="cpp spaces">    </code><code class="cpp comments">dy = center_y;</code></div>
<div class="line number86 index85 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// AB</code></div>
<div class="line number87 index86 alt2"><code class="cpp spaces">    </code><code class="cpp comments">gdImageLine(img, ax, ay, bx, by, color);</code></div>
<div class="line number88 index87 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// BE</code></div>
<div class="line number89 index88 alt2"><code class="cpp spaces">    </code><code class="cpp comments">gdImageLine(img, bx, by, ex, ey, color);</code></div>
<div class="line number90 index89 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// ED</code></div>
<div class="line number91 index90 alt2"><code class="cpp spaces">    </code><code class="cpp comments">gdImageLine(img, ex, ey, dx, dy, color);</code></div>
<div class="line number92 index91 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// DA</code></div>
<div class="line number93 index92 alt2"><code class="cpp spaces">    </code><code class="cpp comments">gdImageLine(img, dx, dy, ax, ay, color);</code></div>
<div class="line number94 index93 alt1"><code class="cpp spaces">    </code><code class="cpp comments">*/</code></div>
<div class="line number95 index94 alt2"><code class="cpp spaces">    </code><code class="cpp plain">ax = center_x;</code></div>
<div class="line number96 index95 alt1"><code class="cpp spaces">    </code><code class="cpp plain">ay = center_y - sun_radius;</code></div>
<div class="line number97 index96 alt2"><code class="cpp spaces">    </code><code class="cpp plain">bx = center_x - sun_radius*</code><code class="cpp functions bold">tan</code><code class="cpp plain">(15*deg);</code></div>
<div class="line number98 index97 alt1"><code class="cpp spaces">    </code><code class="cpp plain">by = center_y;</code></div>
<div class="line number99 index98 alt2"><code class="cpp spaces">    </code><code class="cpp plain">ex = center_x;</code></div>
<div class="line number100 index99 alt1"><code class="cpp spaces">    </code><code class="cpp plain">ey = center_y + sun_radius;</code></div>
<div class="line number101 index100 alt2"><code class="cpp spaces">    </code><code class="cpp plain">dx = center_x + sun_radius*</code><code class="cpp functions bold">tan</code><code class="cpp plain">(15*deg);</code></div>
<div class="line number102 index101 alt1"><code class="cpp spaces">    </code><code class="cpp plain">dy = center_y;</code></div>
<div class="line number103 index102 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// 確定單一菱形區域的塗色正確後, 利用迴圈每次轉動 30 度, 總共轉六次即可塗上十二道光芒區域</code></div>
<div class="line number104 index103 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i=1;i&lt;=6;i++){</code></div>
<div class="line number105 index104 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// A</code></div>
<div class="line number106 index105 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points[0].x = ax+sun_radius*</code><code class="cpp functions bold">sin</code><code class="cpp plain">(30*deg*i);</code></div>
<div class="line number107 index106 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points[0].y = ay+sun_radius-sun_radius*</code><code class="cpp functions bold">cos</code><code class="cpp plain">(30*deg*i);</code></div>
<div class="line number108 index107 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// B</code></div>
<div class="line number109 index108 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points[1].x = bx+sr-sr*</code><code class="cpp functions bold">cos</code><code class="cpp plain">(30*deg*i);</code></div>
<div class="line number110 index109 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points[1].y = by-sr*</code><code class="cpp functions bold">sin</code><code class="cpp plain">(30*deg*i);</code></div>
<div class="line number111 index110 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// E</code></div>
<div class="line number112 index111 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points[2].x = ex-sun_radius*</code><code class="cpp functions bold">sin</code><code class="cpp plain">(30*deg*i);</code></div>
<div class="line number113 index112 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points[2].y = ey-(sun_radius-sun_radius*</code><code class="cpp functions bold">cos</code><code class="cpp plain">(30*deg*i));</code></div>
<div class="line number114 index113 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// D</code></div>
<div class="line number115 index114 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points[3].x = dx-(sr-sr*</code><code class="cpp functions bold">cos</code><code class="cpp plain">(30*deg*i));</code></div>
<div class="line number116 index115 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points[3].y = dy+sr*</code><code class="cpp functions bold">sin</code><code class="cpp plain">(30*deg*i);</code></div>
<div class="line number117 index116 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// 對菱形區域範圍塗色</code></div>
<div class="line number118 index117 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledPolygon(img, points, 4, color);</code></div>
<div class="line number119 index118 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// 在菱形區域外圍畫線, 明確界定菱形範圍</code></div>
<div class="line number120 index119 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePolygon(img, points, 4, color);</code></div>
<div class="line number121 index120 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number122 index121 alt1"><code class="cpp plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p></p>
<p><img alt="" height="400" src="/images/roc_flag_in_gd.png" width="600"/></p><h1>INFO</h1>
<p><strong><span style="background-color: #ffff00;">牛頓第二定律</span></strong></p>
<p><span style="background-color: #ffffff;">資料來源:<a href="https://zh.wikipedia.org/zh-tw/%E7%89%9B%E9%A0%93%E7%AC%AC%E4%BA%8C%E9%81%8B%E5%8B%95%E5%AE%9A%E5%BE%8B">牛頓第二運動定律</a></span></p>
<p><b>牛頓第二運動定律</b>（<span lang="en">Newton's second law of motion</span>）表明，物體所受到的<a href="https://zh.wikipedia.org/wiki/%E5%8A%9B" title="力">外力</a>等於動量對時間的一階<a class="mw-redirect" href="https://zh.wikipedia.org/wiki/%E5%B0%8E%E6%95%B8" title="導數">導數</a>(一次微分值)。當物體在運動中質量不變時，牛頓第二定律也可以用質量與加速度的乘積表示。</p>
<p>1687年，<a class="mw-redirect" href="https://zh.wikipedia.org/wiki/%E8%8B%B1%E5%9C%8B" title="英國">英國</a>物理學家<a class="mw-redirect" href="https://zh.wikipedia.org/wiki/%E7%89%9B%E9%A0%93" title="牛頓">艾薩克‧牛頓</a>在巨著《<a class="mw-redirect" href="https://zh.wikipedia.org/wiki/%E8%87%AA%E7%84%B6%E5%93%B2%E5%AD%B8%E7%9A%84%E6%95%B8%E5%AD%B8%E5%8E%9F%E7%90%86" title="自然哲學的數學原理">自然哲學的數學原理</a>》裏，提出了<a class="mw-redirect" href="https://zh.wikipedia.org/wiki/%E7%89%9B%E9%A0%93%E9%81%8B%E5%8B%95%E5%AE%9A%E5%BE%8B" title="牛頓運動定律">牛頓運動定律</a>，其中有三條定律，分別為<a class="mw-redirect" href="https://zh.wikipedia.org/wiki/%E7%89%9B%E9%A1%BF%E7%AC%AC%E4%B8%80%E5%AE%9A%E5%BE%8B" title="牛頓第一定律">牛頓第一定律</a>、牛頓第二定律與<a class="mw-redirect" href="https://zh.wikipedia.org/wiki/%E7%89%9B%E9%A1%BF%E7%AC%AC%E4%B8%89%E5%AE%9A%E5%BE%8B" title="牛頓第三定律">牛頓第三定律</a>。牛頓第二定律又稱為「加速度定律」。</p>
<p>牛頓第二定律被譽為<a class="mw-redirect" href="https://zh.wikipedia.org/wiki/%E7%B6%93%E5%85%B8%E5%8A%9B%E5%AD%B8" title="古典力學">古典力學</a>的靈魂。在古典力學裡，它能夠主導千變萬化的物體運動與精彩有序的物理現象。牛頓第二定律的用途極為廣泛，它可以用來設計平穩地聳立於雲端的<a href="https://zh.wikipedia.org/wiki/%E5%8F%B0%E5%8C%97101" title="台北101">台北101</a>摩天大廈，也可以用來計算從地球發射火箭登陸月球的運動軌道。</p>
<p>牛頓第二定律是一個涉及到物體運動的理論，根據這定律，任意物體的運動所出現的改變，都是源自於外力的施加於這物體。這理論導致了<a class="mw-redirect" href="https://zh.wikipedia.org/wiki/%E7%B6%93%E5%85%B8%E5%8A%9B%E5%AD%B8" title="古典力學">古典力學</a>的誕生，是科學史的一個里程碑，先前只是描述自然現象的理論不再被採納，取而代之的是這個創立了一種理性的<a class="mw-redirect" href="https://zh.wikipedia.org/wiki/%E5%9B%A0%E6%9E%9C%E9%97%9C%E4%BF%82" title="因果關係">因果關係</a>架構的新理論。實際而言，古典力學的嚴格的因果屬性，對於西方思想與文明的發展，產生了很大的影響。</p>
<p><span style="background-color: #ffff00;"><strong>mass-spring-damper</strong><span style="background-color: #ffffff;">(質量彈簧阻尼器)</span></span></p>
<p><span style="background-color: #ffff00;"><span style="background-color: #ffffff;">資料來源:<a href="https://zh.wikipedia.org/zh-tw/File:Mass-Spring-Damper.svg">mass-spring-damper</a></span></span></p>
<p><span style="background-color: #ffff00;"><span style="background-color: #ffffff;">            <a href="https://zh.wikipedia.org/zh-tw/%E9%98%BB%E5%B0%BC%E5%99%A8">阻尼器</a></span></span></p>
<p><span style="background-color: #ffff00;"><span style="background-color: #ffffff;"></span></span><a href="https://upload.wikimedia.org/wikipedia/commons/9/94/Mass-Spring-Damper.svg"><img alt="File:Mass-Spring-Damper.svg" data-file-height="744" data-file-width="1052" decoding="async" height="566" src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/94/Mass-Spring-Damper.svg/800px-Mass-Spring-Damper.svg.png" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/9/94/Mass-Spring-Damper.svg/1200px-Mass-Spring-Damper.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/9/94/Mass-Spring-Damper.svg/1600px-Mass-Spring-Damper.svg.png 2x" width="800"/></a></p>
<p><b>阻尼器</b>（英語：shock absorber 或 damper）是一種利用<a href="https://zh.wikipedia.org/wiki/%E9%98%BB%E5%B0%BC" title="阻尼">阻尼</a>特性來吸收或抑制衝量，藉以減緩力學<a href="https://zh.wikipedia.org/wiki/%E6%8C%AF%E5%8A%A8" title="振動">振動</a>及消耗<a class="mw-redirect" href="https://zh.wikipedia.org/wiki/%E5%8B%95%E8%83%BD" title="動能">動能</a>的機械或液壓裝置。大部分的阻尼器都是以<a href="https://zh.wikipedia.org/wiki/%E9%BB%8F%E5%A3%B6" title="黏壺">黏壺</a>（dashpot）的形式，透過黏滯流體的阻尼來吸收或抑制衝量。</p>
<p>常用在汽車的<a href="https://zh.wikipedia.org/wiki/%E6%87%B8%E5%90%8A%E7%B3%BB%E7%B5%B1" title="懸吊系統">懸吊系統</a>及<a href="https://zh.wikipedia.org/wiki/%E6%91%A9%E6%89%98%E8%BB%8A" title="摩托車">摩托車</a>中，有些<a class="mw-redirect" href="https://zh.wikipedia.org/wiki/%E8%85%B3%E8%B8%8F%E8%BB%8A" title="腳踏車">腳踏車</a>也有避震器。另外<a href="https://zh.wikipedia.org/wiki/%E6%8E%80%E8%83%8C%E8%BD%A6" title="掀背車">掀背車</a>或<a class="mw-redirect" href="https://zh.wikipedia.org/wiki/%E8%B2%A8%E8%BB%8A" title="貨車">貨車</a>的後車門、部份汽車的引擎蓋以及<a href="https://zh.wikipedia.org/wiki/%E9%90%B5%E8%B7%AF%E8%BB%8A%E8%BC%9B" title="鐵路車輛">鐵路車輛</a>的<a href="https://zh.wikipedia.org/wiki/%E8%BD%89%E5%90%91%E6%9E%B6" title="轉向架">轉向架</a>等也都裝有阻尼器。有些<a href="https://zh.wikipedia.org/wiki/%E6%91%A9%E5%A4%A9%E5%A4%A7%E6%A8%93" title="摩天大樓">摩天大樓</a>為了減緩<a href="https://zh.wikipedia.org/wiki/%E5%9C%B0%E9%9C%87" title="地震">地震</a>或強風吹襲時的搖晃，也會設有阻尼器，例如<a href="https://zh.wikipedia.org/wiki/%E5%8F%B0%E5%8C%97101" title="台北101">台北101</a>、<a href="https://zh.wikipedia.org/wiki/%E9%AB%98%E9%9B%8485%E5%A4%A7%E6%A8%93" title="高雄85大樓">高雄85大樓</a>、<a href="https://zh.wikipedia.org/wiki/%E4%B8%8A%E6%B5%B7%E4%B8%AD%E5%BF%83%E5%A4%A7%E5%8E%A6" title="上海中心大廈">上海中心大廈</a>、<a class="mw-redirect" href="https://zh.wikipedia.org/wiki/%E4%B8%8A%E6%B5%B7%E7%92%B0%E7%90%83%E9%87%91%E8%9E%8D%E4%B8%AD%E5%BF%83" title="上海環球金融中心">上海環球金融中心</a>、<a href="https://zh.wikipedia.org/wiki/%E5%B9%B3%E5%AE%89%E9%87%91%E8%9E%8D%E4%B8%AD%E5%BF%83" title="平安金融中心">平安金融中心</a>、<a class="mw-redirect" href="https://zh.wikipedia.org/wiki/%E5%B7%9D%E6%99%AE%E5%A4%A7%E6%A8%93" title="川普大樓">川普大樓</a>、<a href="https://zh.wikipedia.org/wiki/%E8%8A%B1%E6%97%97%E9%9B%86%E5%9C%98%E4%B8%AD%E5%BF%83" title="花旗集團中心">花旗集團中心</a>等。</p>
<p><strong><span style="background-color: #ffff00;">Euler's Method 數值分析</span></strong></p>
<p><span>資料來源:<a href="https://zh.wikipedia.org/zh-tw/%E6%AC%A7%E6%8B%89%E6%96%B9%E6%B3%95#cite_note-2">歐拉方法</a></span></p>
<p><b>歐拉方法</b>（英語：<span lang="en">Euler method</span>），是一種一階<a href="https://zh.wikipedia.org/wiki/%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90" title="數值分析">數值</a>方法，用以對給定初值的<a href="https://zh.wikipedia.org/wiki/%E5%B8%B8%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B" title="常微分方程">常微分方程</a>求解。</p>
<p>歐拉方法是<span class="ilh-all" data-foreign-title="Numerical methods for ordinary differential equations" data-lang-code="en" data-lang-name="英語" data-orig-title="常微分方程數值方法"><span class="ilh-page"><a class="new" href="https://zh.wikipedia.org/w/index.php?title=%E5%B8%B8%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E6%95%B8%E5%80%BC%E6%96%B9%E6%B3%95&amp;action=edit&amp;redlink=1" original-title="常微分方程數值方法（頁面不存在）">常微分方程數值方法</a></span></span>中最基本的<a class="mw-redirect" href="https://zh.wikipedia.org/wiki/%E6%98%BE%E5%BC%8F%E6%96%B9%E6%B3%95" title="顯式方法">顯式方法</a>；也是一個一<a class="mw-disambig" href="https://zh.wikipedia.org/wiki/%E9%98%B6" title="階">階</a>方法，意味著其局部截斷誤差<a class="mw-redirect" href="https://zh.wikipedia.org/wiki/%E6%AD%A3%E6%AF%94" title="正比">正比於</a>步長的平方，並且其全局截斷誤差正比於步長。<span id="noteTag-cite_ref-sup"><sup class="reference" id="cite_ref-4"></sup></span></p>
<p></p>
<p><img alt="" height="100" src="/images/歐拉方法.jpg" width="150"/> <span>歐拉方法的圖示。待求的曲線為藍色，它的折線近似為紅色。</span></p>
<p><span></span></p>
<p></p>
<p><img alt="" height="200" src="/images/方程圖.jpg" width="200"/> <span>圖示為方程</span><span class="mwe-math-element"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y"><math alttext="{\displaystyle y'=y,y(0)=1}" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow class="MJX-TeXAtom-ORD"><mstyle displaystyle="true" scriptlevel="0"><msup><mi><br/></mi></msup><mo><br/></mo></mstyle></mrow></semantics></math></span><img alt="{\displaystyle y'=y,y(0)=1}" aria-hidden="true" class="mwe-math-fallback-image-inline mw-invert" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/6f6a86254f593070a1135cde718d935447150dc9"/></span><span>的數值積分。藍色為歐拉法，綠色為</span><span class="ilh-all" data-foreign-title="Midpoint method" data-lang-code="en" data-lang-name="英語" data-orig-title="中点法"><span class="ilh-page"><a class="new" href="https://zh.wikipedia.org/w/index.php?title=%E4%B8%AD%E7%82%B9%E6%B3%95&amp;action=edit&amp;redlink=1" original-title="中點法（頁面不存在）">中點法</a></span></span><span>，紅色為精確解</span><span class="mwe-math-element"><img alt="{\displaystyle y=e^{t}}" aria-hidden="true" class="mwe-math-fallback-image-inline mw-invert" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/d4383514b086d37fd2316fd8baec32739b094291"/></span><span>。所用步長為</span><span class="mwe-math-element"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y"><math alttext="{\displaystyle h=1.0}" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow class="MJX-TeXAtom-ORD"><mstyle displaystyle="true" scriptlevel="0"><mi>ℎ</mi><mo>=</mo><mn>1.0</mn></mstyle></mrow></semantics></math></span><img alt="h=1.0" aria-hidden="true" class="mwe-math-fallback-image-inline mw-invert" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/9a6dc333c871dacd082fe359d357bd28243efb34"/></span><span>。</span></p>
<p><span></span></p>
<p><img alt="" height="200" src="/images/步長.jpg" width="200"/> <span>圖示為同一個方程在步長</span><span class="mwe-math-element"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y"><math alttext="{\displaystyle h=0.25}" xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow class="MJX-TeXAtom-ORD"><mstyle displaystyle="true" scriptlevel="0"><mi><br/></mi><mn><br/></mn></mstyle></mrow></semantics></math></span><img alt="h=0.25" aria-hidden="true" class="mwe-math-fallback-image-inline mw-invert" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/34e32041844feb7080b9225fbf14f856d9750ee4"/></span><span>時的結果。可以看出中點法比歐拉法收斂更快。</span></p>
<h1>note</h1>
<p><span style="background-color: #ffff00;">帳號連接</span>:</p>
<p>利用<span><span><span style="background-color: #ffff00;">命令提示字元</span>(小黑窗)</span>連接個人倉儲</span>編輯網頁:</p>
<p>開啟小黑窗ipv6</p>
<p>打 git clone --recurse-submodules<span style="background-color: #ffff00;">空格</span><span>複製貼上下列圖片網址</span></p>
<p><span>完成後enter</span></p>
<p></p>
<p><img alt="" height="350" src="/images/倉儲.jpg" width="500"/></p>
<p><span style="background-color: #ffff00;">token設定</span></p>
<p>Personal access tokens</p>
<p>開啟github帳號點選右上頭像並點選Settings<br/>點選Developer settings<br/>點選Personal access tokens<br/>點選Generate new token(classic)<br/>Note 名稱(任意)<br/>Expiration 到期(建議90天)<br/>勾選repo(第一個)<br/>點選最下面的Generate token<br/>複製產生出來的token<br/>開啟可攜系統<br/>開啟欲設Personal access tokens的資料夾<br/>點開<span style="background-color: #ffff00;">.git</span>(要開隱藏項目才看的到)<br/>將裡面的<span style="background-color: #ffff00;">congif拉到SciTE</span>(灰色圓球)<br/>將複製的字串貼在github.com的前面再加上<span style="background-color: #ffff00;">@並存檔(CTRL+S)</span><br/>Personal access tokens就設定完成</p>
<p>最後再回到可攜系統打cms enter後，即可順利開啟近端編輯個人網頁</p>